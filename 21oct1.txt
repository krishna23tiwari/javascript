1. 
   function processArray(arr, callback) {
       return arr.map(callback);
   }
   console.log(processArray([1, 2, 3], x => x * 2));
   
   Output: [2,4,6]

Here we use callback function and pass the array in function and in return we are using map and map perform operation on every single element so first it will perform operation on first element then second and so on.

-----------------------------------------------------------------------------------------------------------------

2. 
   function calculate(a, b, callback) {
       return callback(a, b);
   }
   console.log(calculate(5, 3, (x, y) => x + y));
   
   Output: 8

Here first use callback and when we pass the value then it will go to a and b and then callback and the operation will perform

----------------------------------------------------------------------------------------------------------------

3. 
   function filterArray(arr, callback) {
       return arr.filter(callback);
   }
   console.log(filterArray([10, 20, 30, 40], x => x > 25));
   
   Output: 30,40

Here we use filter and filter perform operation on every single element, so when we pass the array then it will check each element and if elemet is greater than 25 then it will print

-----------------------------------------------------------------------------------------------------------------

4. 
   function greetUser(name, callback) {
       return callback(`Hello, ${name}!`);
   }
   console.log(greetUser("Alice", message => message));
   
   Output: hello alice

so when we pass the value alice here then it will go to name and then in return it will print hello alice.

------------------------------------------------------------------------------------------------------------------

5. 
   function doubleArray(arr, callback) {
       return arr.map(callback);
   }
   console.log(doubleArray([1, 2, 3, 4], x => x * 2));
   
   Output: [2,4,6,8]

here we again use map and as we already know that it will perform an operation on each element of array, and it will multiply with 2 and show the outpur in a new array.

-----------------------------------------------------------------------------------------------------------------

6. 
   function findMin(arr, callback) {
       return callback(Math.min(...arr));
   }
   console.log(findMin([5, 10, 1, 3], min => min));
   
   Output: 1

here we use min so when we pass the array then it will find the minimum in an array and return it and here the minimum is 1.

------------------------------------------------------------------------------------------------------------------

7. 
   function sum(a, b, callback) {
       return callback(a + b);
   }
   console.log(sum(10, 5, result => result * 2));
   
   Output: 30

here we pass the value in sum so first sum function will take 2 values which contain 10 and 5 and we perform an addition on a and b so it will add them and when function receive the value then it will store in result and result is multipl with 2.

----------------------------------------------------------------------------------------------------------------

8. 
   function processStrings(arr, callback) {
       return arr.map(callback);
   }
   console.log(processStrings(["hello", "world"], str => str.toUpperCase()));
   
   Output: ['HELLO', 'WORLD']

here we use .toupper function and map will perform operation on each element so it will print each elements in upper letters in array.

-----------------------------------------------------------------------------------------------------------------

9. 
   function countVowels(str, callback) {
       const count = str.match(/[aeiou]/gi)?.length || 0;
       return callback(count);
   }
   console.log(countVowels("hello world", count => count));
   
   Output: 3

here we are finding vowels and when we find one then the length function will count it and it will count the vowel

-----------------------------------------------------------------------------------------------------------------


10. 
    function getFirstElement(arr, callback) {
        return callback(arr[0]);
    }
    console.log(getFirstElement([1, 2, 3], el => el * 2));
    
    Output: 2

here we pass the array and when we pass the array then we return the first element of array and multiply it with 2 so it will return 2
----------------------------------------------------------------------------------------------------------------

11. 
    function findIndex(arr, value, callback) {
        const index = arr.indexOf(value);
        return callback(index);
    }
    console.log(findIndex([10, 20, 30], 20, idx => idx));
    
    Output: 1

it will return the index value of 20 which is 1.

-----------------------------------------------------------------------------------------------------------------


12. 
    function mergeStrings(arr1, arr2, callback) {
        return callback([...arr1, ...arr2]);
    }
    console.log(mergeStrings(["a", "b"], ["c", "d"], arr => arr.join(",")));
    
    Output: a,b,c,d

here we use join function and with the use of join we add both the arrays by ',' so join is mainly use when we have to add then values by anything.

------------------------------------------------------------------------------------------------------------------

13. 
    function multiplyNumbers(arr, factor, callback) {
        return callback(arr.map(num => num * factor));
    }
    console.log(multiplyNumbers([1, 2, 3], 3, result => result.reduce((a, b) => a + b)));
    
    Output: 18

here we pass the array and the factor value of 3 and then it it will multiply with the factor with each element of array and reduce will use reduce and add each element.

---------------------------------------------------------------------------------------------------------------


14. 
    function checkEven(num, callback) {
        return callback(num % 2 === 0);
    }
    console.log(checkEven(4, isEven => isEven ? "Even" : "Odd"));
    
    Output: even

here it will give us result of even when we pass the value of 4 in num and it will check if it divide by 2 then it will print even or not then odd

----------------------------------------------------------------------------------------------------------------

15. 
    function filterShortStrings(arr, maxLength, callback) {
        return callback(arr.filter(str => str.length <= maxLength));
    }
    console.log(filterShortStrings(["apple", "banana", "pear"], 5, result => result));
    
    Output: [ 'apple', 'pear' ]

here the result will be apple and pear because here we pass the length which is 5 and if the length of the each element greater then 5 then it will print.

----------------------------------------------------------------------------------------------------------------

16. 
    function generateRandomNumbers(count, callback) {
        const numbers = Array.from({ length: count }, () => Math.floor(Math.random() * 100));
        return callback(numbers);
    }
    console.log(generateRandomNumbers(5, nums => nums));
    
    Output: [ 78, 79, 66, 32, 57 ]
----------------------------------------------------------------------------------------------------------------

17. 
    function getObjectKeys(obj, callback) {
        return callback(Object.keys(obj));
    }
    console.log(getObjectKeys({ a: 1, b: 2 }, keys => keys.join(", ")));
    
    Output: a,b

here it will print the key and join it with the comma value and it will print it a,b

